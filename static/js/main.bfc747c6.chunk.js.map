{"version":3,"sources":["registerServiceWorker.js","components/CustomMap.jsx","UserContext.js","components/MapLC.jsx","components/NavBar.jsx","components/Location.jsx","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","CustomMap","UserContext","createContext","MapLC","useContext","mcc","mnc","lac","cid","setLon","setLat","isget","setIsget","setStartCenter","startLon","setStartLon","starLat","setStarLat","map","setMap","zoom","setZoom","startCenter","Button","onClick","axios","get","params","data","cellid","v","response","lat","lon","NavBar","setMcc","markers","setMarkers","setMnc","isOpen","setIsOpen","isrus","setIsrus","setLac","setCid","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","className","Form","inline","onSubmit","e","preventDefault","FormGroup","Input","style","marginRight","type","name","id","value","onChange","event","target","placeholder","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","Location","center","MapContainer","scrollWheelZoom","LayersControl","position","BaseLayer","checked","TileLayer","attribution","url","Overlay","Marker","icon","Icon","iconUrl","markerIconPng","iconSize","iconAnchor","Tooltip","sticky","minWidth","Circle","pathOptions","fillColor","radius","App","useState","providerValue","useMemo","Provider","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bfc747c6.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport 'leaflet/dist/leaflet.css'\r\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\"\r\nimport { Icon } from 'leaflet'\r\nimport { MapContainer, TileLayer, Polyline , Marker, Tooltip } from \"react-leaflet\";\r\n\r\nfunction CustomMap() { \r\n\r\n    const [lon] = React.useState(34.55783892861)\r\n    const [lat] = React.useState(46.02989868676)\r\n    const [lon1] = React.useState(25.5947)\r\n    const [lat1] = React.useState(49.5535)\r\n    const [lon2] = React.useState(33.77633318797)\r\n    const [lat2] = React.useState(46.12978873242)\r\n\r\n    const center = [lat, lon]\r\n    const center1 = [lat1, lon1]\r\n    const center2 = [lat2, lon2]\r\n\r\n    const polyline = [\r\n        center,\r\n        center1,\r\n        center2\r\n      ]\r\n\r\n    const blackOptions = { color: 'blue' }\r\n\r\n    return (\r\n        <MapContainer center={center} zoom={11}>\r\n            <TileLayer\r\n                attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n                url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n            <Marker position={center} icon={new Icon({ iconUrl: markerIconPng, iconSize: [25, 41], iconAnchor: [12, 41] })} >\r\n                <Tooltip sticky minWidth={90}>Base Station</Tooltip>\r\n            </Marker>\r\n            <Marker position={center1} icon={new Icon({ iconUrl: markerIconPng, iconSize: [25, 41], iconAnchor: [12, 41] })} >\r\n                <Tooltip sticky minWidth={90}>Base Station</Tooltip>\r\n            </Marker>\r\n            <Marker position={center2} icon={new Icon({ iconUrl: markerIconPng, iconSize: [25, 41], iconAnchor: [12, 41] })} >\r\n                <Tooltip sticky minWidth={90}>Base Station</Tooltip>\r\n            </Marker>\r\n            <Polyline pathOptions={blackOptions} positions={polyline} />\r\n        </MapContainer>\r\n    )\r\n}\r\nexport default CustomMap\r\n","import { createContext } from 'react';\r\n\r\nexport const UserContext = createContext(null)","import React, { useContext, useCallback, useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n    Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Form, FormGroup, Label, Input\r\n} from \"reactstrap\";\r\nimport { UserContext } from '../UserContext';\r\n\r\nfunction MapLC() {\r\n\r\n    const { mcc, mnc, lac, cid, setLon, setLat, isget, setIsget, startLon, setStartLon, starLat, setStarLat, map, setMap, zoom, setZoom, startCenter, setStartCenter } = useContext(UserContext)\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                onClick={() => { GetLoc() }}\r\n            >Get Location\r\n            </Button>\r\n        </div>\r\n    )\r\n\r\n    function GetLoc() {\r\n        setIsget(\"true\")\r\n        console.log('isget =>', isget)\r\n        console.log(\"GETLOCATIONVITHLC\");\r\n        axios.get('https://api.mylnikov.org/mobile/main.py', {\r\n            params: {\r\n                data: \"open\",\r\n                mcc: mcc,\r\n                mnc: mnc,\r\n                cellid: cid,\r\n                lac: lac,\r\n                v: \"1.1\"\r\n            }\r\n        }\r\n        ).then(response => {\r\n            const lat = response.data.data.lat\r\n            setLat(lat)\r\n            const lon = response.data.data.lon\r\n            setLon(lon)\r\n            setStartCenter(lat, lon)\r\n            console.log(\"lat =>\", lat);\r\n            console.log(\"lon =>\", lon);\r\n\r\n        }).catch(error => {\r\n            console.log(\"Error =>\", error);\r\n        })\r\n    }\r\n}\r\n\r\nexport default MapLC\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Form, FormGroup, Label, Input\r\n} from \"reactstrap\";\r\nimport { UserContext } from '../UserContext';\r\nimport MapLC from \"./MapLC\";\r\n\r\nexport default function NavBar() {\r\n\r\n  const { markers, setMarkers, mcc, setMcc, mnc, setMnc, isOpen, setIsOpen, isrus, setIsrus, lac, setLac, cid, setCid } = useContext(UserContext)\r\n\r\n\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    console.log(lac, cid);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">Location</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <Form inline onSubmit={submit}>\r\n              <FormGroup>\r\n                <Input style={{ marginRight: '.9rem' }} type=\"text\" name=\"LAC\" id=\"LAC\" value={lac} onChange={event => setLac(event.target.value)} placeholder=\"LAC\" />\r\n                <p />\r\n                <Input type=\"text\" name=\"CID\" id=\"CID\" value={cid} onChange={event => setCid(event.target.value)} placeholder=\"CID\" />\r\n              </FormGroup>\r\n            </Form>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                MCC\r\n                </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem onClick={() => { setIsrus('true'); setMcc('250') }} >Russia</DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem onClick={() => { setIsrus('false'); setMcc('255') }}>Ukraine</DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            {isrus == 'false' ? (\r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  MNC\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem onClick={() => setMnc('01')}>Vodafone (01)</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem onClick={() => setMnc('02')}>Kievstar (02)</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem onClick={() => setMnc('03')}>Kievstar (03)</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem onClick={() => setMnc('04')}>Intertelekom (04)</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem onClick={() => setMnc('06')}>Lifecell (06)</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem onClick={() => setMnc('07')}>3Mob; Lycamobile (07)</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem onClick={() => setMnc('08')}>Ukr telekom (08)</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem onClick={() => setMnc('09')}>Vega (09)</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem onClick={() => setMnc('21')}>PEOPLEnet (21)</DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            ) : (\r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  MNC\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem onClick={() => setMnc('32')}>WIN-Mobile (32)</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem onClick={() => setMnc('33')}>Sev-Mobile (33)</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem onClick={() => setMnc('34')}>Crim-telekom (34)</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem onClick={() => setMnc('60')}>Volna-Mobile (60)</DropdownItem>\r\n                  <DropdownItem divider />\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            )\r\n            }\r\n            <MapLC />\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div >\r\n  );\r\n}\r\n","import React, { useContext, useMemo } from \"react\";\r\nimport 'leaflet/dist/leaflet.css';\r\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\";\r\nimport { Icon } from 'leaflet';\r\nimport { MapContainer, TileLayer, Circle, Marker, Tooltip, LayersControl } from \"react-leaflet\";\r\nimport { UserContext } from '../UserContext';\r\nimport MapLC from \"./MapLC\";\r\n\r\nfunction Location() {\r\n\r\n    const { lon, lat, isget, startCenter, setStartCenter, zoom, setZoom, map, setMap } = useContext(UserContext)\r\n\r\n    const center = [lat, lon]\r\n\r\n    return (\r\n        <div>\r\n            <MapContainer center={startCenter} zoom={zoom} scrollWheelZoom={true}>\r\n                <LayersControl position=\"topright\">\r\n                    <LayersControl.BaseLayer checked name=\"Color MAP\">\r\n                        <TileLayer\r\n                            attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n                            url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                    </LayersControl.BaseLayer>\r\n                    <LayersControl.BaseLayer name=\"Black-White MAP\">\r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\r\n                        />\r\n                    </LayersControl.BaseLayer>\r\n                    {isget == \"false\" ? null :\r\n                        (\r\n                            <div>\r\n                                <LayersControl.Overlay name=\"Base station\">\r\n                                    <Marker position={center} icon={new Icon({ iconUrl: markerIconPng, iconSize: [25, 41], iconAnchor: [12, 41] })} >\r\n                                        <Tooltip sticky minWidth={90}>Base Station</Tooltip>\r\n                                    </Marker>\r\n                                </LayersControl.Overlay>\r\n                                <LayersControl.Overlay checked name=\"Radius BS\">\r\n                                    <Circle\r\n                                        center={center}\r\n                                        pathOptions={{ fillColor: 'blue' }}\r\n                                        radius={15000}>\r\n                                        <Tooltip>Radius BS</Tooltip>\r\n                                    </Circle>\r\n                                </LayersControl.Overlay>\r\n                            </div>\r\n\r\n                        )\r\n                    }\r\n                </LayersControl>\r\n            </MapContainer>\r\n        </div>\r\n    )\r\n\r\n    // const displayMap = useMemo(\r\n    //     () => (\r\n    //         <MapContainer\r\n    //             center={center}\r\n    //             zoom={zoom}\r\n    //             scrollWheelZoom={false}\r\n    //             whenCreated={setMap}>\r\n    //             <TileLayer\r\n    //                 attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n    //                 url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n    //             />\r\n    //         </MapContainer>\r\n    //     ),\r\n    //     [],\r\n    // )\r\n\r\n    // return (\r\n    //     <div>\r\n    //         {map ? <MapLC map={map} /> : null}\r\n    //         {displayMap}\r\n    //     </div>\r\n    // )\r\n}\r\n\r\nexport default Location\r\n","import React, { useMemo, useState } from \"react\";\nimport CustomMap from \"./components/CustomMap\";\nimport NavBar from \"./components/NavBar\";\nimport { UserContext } from \"./UserContext\";\nimport \"./App.css\";\nimport Location from \"./components/Location\";\n\nexport default function App() {\n  const [markers, setMarkers] = useState([]);\n  const [mcc, setMcc] = useState(\"\");\n  const [mnc, setMnc] = useState(\"\");\n  const [lac, setLac] = useState(\"\");\n  const [cid, setCid] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(\"false\");\n  const [isrus, setIsrus] = useState(\"false\");\n  const [isget, setIsget] = useState(\"false\");\n  const [lon, setLon] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n  const [zoom, setZoom] = useState(\"7\");\n  const [startCenter, setStartCenter] = useState([45.71168, 34.39274]);\n  const [map, setMap] = useState(null);\n\n  const providerValue = useMemo(\n    () => ({\n      mcc,\n      setMcc,\n      mnc,\n      setMnc,\n      isOpen,\n      setIsOpen,\n      isrus,\n      setIsrus,\n      lac,\n      setLac,\n      cid,\n      setCid,\n      markers,\n      setMarkers,\n      lon,\n      setLon,\n      lat,\n      setLat,\n      isget,\n      setIsget,\n      startCenter,\n      setStartCenter,\n      zoom,\n      setZoom,\n      map,\n      setMap,\n    }),\n    [\n      mcc,\n      setMcc,\n      mnc,\n      setMnc,\n      isOpen,\n      setIsOpen,\n      isrus,\n      setIsrus,\n      lac,\n      setLac,\n      cid,\n      setCid,\n      markers,\n      setMarkers,\n      lon,\n      setLon,\n      lat,\n      setLat,\n      isget,\n      setIsget,\n      startCenter,\n      setStartCenter,\n      zoom,\n      setZoom,\n      map,\n      setMap,\n    ]\n  );\n\n  return (\n    <div className=\"app\">\n      <UserContext.Provider value={providerValue}>\n        <NavBar />\n        <Location markers={markers} />\n      </UserContext.Provider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./App.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}